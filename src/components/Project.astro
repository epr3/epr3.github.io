---
import { CollectionEntry, getEntries } from "astro:content";
import SkillsCard from "./SkillsCard.astro";

export interface Props {
  project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

const computedSkills = {
  frontend: project.data.skills.frontend
    ? (await getEntries(project.data.skills.frontend)).map(
        (skill) => skill.data
      )
    : [],
  backend: project.data.skills.backend
    ? (await getEntries(project.data.skills.backend)).map((skill) => skill.data)
    : [],
  devops: project.data.skills.devops
    ? (await getEntries(project.data.skills.devops)).map((skill) => skill.data)
    : [],
};

const render = await project.render();
---

<div class="flex flex-col gap-6">
  <div class="prose max-w-none">
    <render.Content />
  </div>

  <p class="font-semibold">Tech stack interacted with:</p>
  <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
    {
      !!computedSkills.frontend.length && (
        <SkillsCard name="Frontend" projects={computedSkills.frontend} />
      )
    }
    {
      !!computedSkills.backend.length && (
        <SkillsCard name="Backend" projects={computedSkills.backend} />
      )
    }
    {
      !!computedSkills.devops.length && (
        <SkillsCard name="DevOps" projects={computedSkills.devops} />
      )
    }
  </div>
</div>
